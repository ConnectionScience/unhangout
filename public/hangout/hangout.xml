<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *      
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License
-->
<ModulePrefs title="Unhangout Manager">
        <Require feature="rpc" />
        <Require feature="views" />
</ModulePrefs>
<Content type="html"><![CDATA[
<html>
	<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.8.2/jquery.min.js" ></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.1/underscore-min.js" ></script>
	<script src="//plus.google.com/hangouts/_/api/v1/hangout.js"></script>
<script>

var baseServerUrl;
var sessionId;
var interval;
var serverUrl;

// five seconds is a reasonable starting time.
var HEARTBEAT_INTERVAL = 5000;

function init() {
	console.log("init running");

		// we expect that appData has format:
		// host:port:sessionid
		// unpack that and post it back to the server.
		var appData = gadgets.views.getParams()['appData'];
		console.log(appData);

		// TODO if the app is started without app data, note it in the logs.
		var appDataPieces = appData.split(":");
		
		baseServerUrl = "http://" + appDataPieces[0] + ":" + appDataPieces[1];
		sessionId = appDataPieces[2];
		serverUrl = baseServerUrl + "/session/hangout/" + sessionId;

		gapi.hangout.onApiReady.add(
	      function(eventObj) {
	        if (eventObj.isApiReady) {
			  // When API is ready...                                                         
				console.log("READY!");
				gapi.hangout.hideApp();
				
				// now, phone home.
				loaded(eventObj);		

				takeControl();		

				console.log("PARTICIPANT: " + gapi.hangout.getLocalParticipantId());
				console.log("all participants: " + JSON.stringify(gapi.hangout.getParticipants()));
				console.log("by id: " + JSON.stringify(gapi.hangout.getParticipantById(gapi.hangout.getLocalParticipantId())));
	    	}
	      });

}

	// This function sets up all the callbacks necessary to keep the unhangout-server 
	// aprised of the activity in the hangout. This should be called when this client is
	// convinced that it should be in charge of that communication.
	function takeControl() {
		console.log("TAKE CONTROL");
		// setup a heartbeat call so the server can tell when hangouts close.	
		interval = setInterval(function() {
			sendHeartbeat();
		}, HEARTBEAT_INTERVAL);		

	    gapi.hangout.onParticipantsChanged.add(sendParticipantsUpdate);

	    // trigger an update immediately in case we missed the change event for our own entry.
	    // this is actually the default situation. For whatever reason, onParticipantsChanged
	    // will fire BEFORE onApiReady in basically all conditions I've seen. So if we wait until
	    // after apiReady to takeControl(), then we won't send a participant message. 
	    // As a result, we force an update immediately using the current full list just to make
	    // sure we're up to date. This also helps around control handoffs, where someone
	    // could conceivably join in the gap between 
	    sendParticipantsUpdate({participants:gapi.hangout.getParticipants()});
	}

	// the inverse of take control. stops sending heartbeats, and stops watching for
	// participants joining/leaving.
	function releaseControl() {
		console.log("RELEASE CONTROL");
		clearInterval(interval);

		gapi.hangout.onParticipantsChanged.remove(sendParticipantsUpdate);
	}


	function loaded(eventObj) {
		$.post(serverUrl, {
			type: "loaded",
			url: gapi.hangout.getHangoutUrl(),
			participant: gapi.hangout.getLocalParticipantId()
		}).done(function() {
			console.log("loaded success!");
		}).fail(function() {
			console.log("loaded failure");
		});
	}

	function sendParticipantsUpdate(eventObj) {
		console.log(JSON.stringify(eventObj));

		// this event seems to trigger twice early on in the life of a hangout. once on load,
		// and then again about 5 minutes later. Not sure why that is.
		console.log("participants changed, current participants: " + JSON.stringify(eventObj.participants));

		$.post(serverUrl, {
			type: "participants",
			participants: eventObj.participants
		}).done(function() {
			console.log("participants success!");
		}).fail(function() {
			console.log("participants failure");
		});
	}

	function sendHeartbeat(eventObj) {
		$.post(serverUrl, {
			type:"heartbeat",
			from:gapi.hangout.getLocalParticipantId()
		}).done(function() {
			console.log("heartbeat success!");
		}).fail(function() {
			console.log("heartbeat fail");
		});
	}


// Wait for gadget to load.                                                       
gadgets.util.registerOnLoadHandler(init);
</script>
<body>
	<p>This hangout extension doesn't have any UI - no need to show this pane!</p>
</body>
]]>
</Content>
</Module>
